@use 'sass:meta';

@layer pico, base;

@layer pico {
  @include meta.load-css('pico');
}

@layer base {
  @keyframes focus-within {
  }
  @keyframes blur-within {
  }

  :root {
    --pico-font-family: var(--link-garden-google-font, ''),
      var(--link-garden-theme-font, ''), system-ui, 'Segoe UI', Roboto, Oxygen,
      Ubuntu, Cantarell, Helvetica, Arial, 'Helvetica Neue', sans-serif,
      var(--pico-font-family-emoji);

    @media (prefers-color-scheme: light) {
      background-color: var(--link-garden-bg-color-light);
    }
    @media (prefers-color-scheme: dark) {
      background-color: var(--link-garden-bg-color-dark);
    }
  }

  body {
    padding: calc(var(--pico-block-spacing-vertical) + env(safe-area-inset-top))
      env(safe-area-inset-right) env(safe-area-inset-bottom)
      env(safe-area-inset-left);
    width: 100%;
    height: 100%;

    // pseudo-element because background-attachment: fixed is broken on mobile
    &::before {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-position: center;
      background-size: cover;
      background-repeat: no-repeat;
      content: '';

      @media (prefers-color-scheme: light) {
        background-image: var(--link-garden-bg-image-light);
      }
      @media (prefers-color-scheme: dark) {
        background-image: var(--link-garden-bg-image-dark);
      }
    }
  }

  body,
  header,
  main,
  footer {
    display: flex;
    flex-direction: column;
  }

  .hover-coordinates-wrapper {
    // Fires a dummy animation whenever an element inside the wrapper is focused or blurred. This lets us listen to the animationstart event and clear the hover coordinates on focus change.
    animation: blur-within 0s;
    &:focus-within {
      animation: focus-within 0s;
    }
  }

  .profile {
    align-items: center;
    text-align: center;
  }

  .profile-image {
    width: 128px;
    height: 128px;
    -webkit-margin-after: var(--pico-spacing);
    margin-block-end: var(--pico-spacing);
    object-fit: cover;
  }

  .link-section {
    display: flex;
    flex-direction: column;
    margin-top: var(--pico-block-spacing-vertical);
  }

  .link-section-links {
    display: flex;
    flex-direction: column;
    row-gap: var(--pico-spacing);
  }

  .link-button {
    display: flex;
    container: link-button / inline-size;
  }

  .link-button-link {
    display: flex;
    flex-grow: 1;
    text-decoration: none;
    column-gap: var(--pico-spacing);
  }

  .link-button a {
    color: inherit;
  }

  .link-button-image {
    flex-shrink: 0;
    align-self: center;
    max-width: 64px;
    width: 10cqw;
    height: auto;
  }

  .link-button-title {
    display: inline-block;
  }

  .link-button-new-tab {
    display: flex;
    flex-shrink: 0;
    align-items: center;
    -webkit-padding-start: var(--pico-spacing);
    padding-inline-start: var(--pico-spacing);
  }
}
